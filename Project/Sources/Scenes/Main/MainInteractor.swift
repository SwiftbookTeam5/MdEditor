//
//  MainInteractor.swift
//  MdEditor
//
//  Created by Александра Рязанова on 01.02.2024.
//  Copyright (c) 2024 SwiftbookTeam5. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import FileManagerPackage

protocol IMainDelegate: AnyObject {
	func showAbout()
	func openFileExplorer()
	func newFile()
	func openFile(file: File)
}

protocol IMainInteractor {

	/// Событие на предоставление информации о файлах и действиях
	func fetchData()

	/// Событие, что действие было выбрано.
	/// - Parameter request: Запрос, содержащий информацию о выбранном действие.
	func performAction(request: MainModel.Request)
}

final class MainInteractor: IMainInteractor {

	// MARK: - Dependencies

	private var presenter: IMainPresenter
	private let recentFileManager: IRecentFileManager
	private weak var delegate: IMainDelegate?

	// MARK: - Private properties

	private let menu: [MainModel.MenuIdentifier] = [.newFile, .openFile, .showAbout]

	// MARK: - Initialization

	init(presenter: IMainPresenter, recentFileManager: IRecentFileManager, delegate: IMainDelegate) {
		self.presenter = presenter
		self.recentFileManager = recentFileManager
		self.delegate = delegate
	}

	// MARK: - Internal methods

	/// Событие на предоставление информации о файлах и действиях
	func fetchData() {
		let recentFiles = recentFileManager.getRecentFiles()
		let response = MainModel.Response(recentFiles: recentFiles, menu: menu)
		presenter.present(response: response)
	}

	/// Событие, что действие было выбрано.
	/// - Parameter request: Запрос, содержащий информацию о выбранном действие.
	func performAction(request: MainModel.Request) {
		switch request {
		case .menuItemSelected(let indexPath):
			let selectedMenuItem = menu[min(indexPath.row, menu.count - 1)]
			switch selectedMenuItem {
			case .openFile:
				delegate?.openFileExplorer()
			case .newFile:
				delegate?.newFile()
			case .showAbout:
				delegate?.showAbout()
			}
		case .recentFileSelected:
			break
		}
	}
}
